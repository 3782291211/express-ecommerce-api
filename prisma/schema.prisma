generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sid     String    @unique
  sess    Json
  expire  DateTime  @db.Timestamp(6)

  @@map("session")
}

model CartItem {
  customerId Int
  productId  Int
  quantity   Int?
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([customerId, productId])
}

model Category {
  id          Int       @default(autoincrement())
  name        String    @id @db.VarChar(50)
  description String    @db.VarChar(100)
  thumbnail   String?
  products    Product[]
}

model Customer {
  id              Int        @id @default(autoincrement())
  name            String     @db.VarChar(50)
  username        String     @unique @db.VarChar(50)
  password        String    
  email           String     @unique @db.VarChar(50)
  joinDate        DateTime?  @default(now()) @db.Timestamp(6)
  billingAddress  String?
  shippingAddress String?
  avatar          String?
  cartItems       CartItem[]
  orders          Order[]
}

model OrderItem {
  orderId   Int
  productId Int
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([orderId, productId])
}

model Order {
  id              Int         @id @default(autoincrement())
  customerId      Int
  shippingAddress String?     @db.VarChar(100)
  status          String?     @db.VarChar(20)
  created_at      DateTime?   @default(now()) @db.Timestamp(6)
  orderItems      OrderItem[]
  customer        Customer?   @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Product {
  id           Int         @id @default(autoincrement())
  name         String     
  description  String     
  price        Decimal    @db.Decimal(6, 2)
  stock        Int
  categoryName String     
  supplierName String    
  thumbnail    String?
  cartItems    CartItem[]
  orderItems   OrderItem[]
  category     Category?   @relation(fields: [categoryName], references: [name], onDelete: NoAction, onUpdate: NoAction)
  supplier     Supplier?   @relation(fields: [supplierName], references: [name], onDelete: NoAction, onUpdate: NoAction)
}

model Supplier {
  id            Int       @default(autoincrement())
  name          String    @id
  location      String? 
  establishYear Int?
  thumbnail     String?
  products      Product[]
}